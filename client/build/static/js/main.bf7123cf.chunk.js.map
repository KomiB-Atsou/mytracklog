{"version":3,"sources":["reducers/auth.js","constants/actionTypes.js","reducers/index.js","reducers/posts.js","components/styles.js","components/Header.js","services/category.js","utils/swal.js","components/CalendarView.js","services/task.js","components/Category.js","components/CategoryForm.js","components/TreeView.js","components/NoCategorySelected.js","components/Task.js","api/index.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","components/Home/Home.js","App.js","index.js"],"names":["authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","loading","errors","clear","reducers","combineReducers","posts","isLoading","payload","currentPage","numberOfPages","post","map","_id","filter","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","breakpoints","down","heading","color","palette","primary","main","textDecoration","fontSize","fontWeight","image","marginLeft","marginTop","toolbar","width","profile","logout","userName","textAlign","brandContainer","purple","getContrastText","deepPurple","backgroundColor","Header","props","useState","parse","getItem","user","setUser","dispatch","useDispatch","location","useLocation","history","useHistory","classes","useStyles","useEffect","token","decode","exp","Date","getTime","push","className","style","height","href","marginRight","config","appTitle","Toolbar","result","Typography","variant","name","Button","component","Link","to","api","process","console","log","getAll","keyword","a","error","axios","then","resp","status","catch","err","response","getAllFlat","add","label","parentCategoryId","dateCreated","moment","format","dateUpdated","update","id","getPath","get","delete","getDuration","categoryId","beginDate","endDate","swalCategory","parentCategoryLabel","callback","Swal","fire","title","length","html","showCancelButton","confirmButtonText","showLoaderOnConfirm","footer","preConfirm","text","document","getElementById","value","showValidationMessage","swalDeleteForm","icon","confirmButtonColor","cancelButtonColor","swalError","message","position","showConfirmButton","swalSuccess","timer","swalLoading","timerProgressBar","allowEscapeKey","allowOutsideClick","onBeforeOpen","showLoading","CalendarView","selectedDay","setSelectedDay","duration","setDuration","view","setView","selectedCategory","getFullYear","getMonth","startOf","toDate","endOf","categoryService","close","x","d","hours","Math","floor","asHours","mins","asMinutes","locale","week","dow","localizer","momentLocalizer","pill","popup","selectable","events","tasks","onSelectSlot","start","end","onSelectEvent","task","viewTaskDetails","onNavigate","date","onView","obj","Category","path","setPath","category","visible","onClose","closeOnEsc","closeMaskOnClick","customStyles","overflow","CategoryForm","currentDateTime","setLabel","setCategoryId","setParentCategoryId","setDescription","setStartedAt","setFinishedAt","categories","setCategories","reloadPage","setTimeout","window","reload","split","handleSubmit","e","preventDefault","onSubmit","htmlFor","placeholder","required","onChange","target","SelectSearch","emptyMessage","search","filterOptions","fuzzySearch","options","onClick","TreeView","showCategoryDetailsPopup","setShowCategoryDetailsPopup","setSelectedCategory","setSelectedUpdateCategory","showCategoryModal","setShowCategoryModal","showCategoryUpdateModal","setShowCategoryUpdateModal","setTotalDuration","setTasks","reloadLibs","querySelector","remove","js","createElement","src","getElementsByTagName","appendChild","reloadTasks","taskService","f","Array","from","groups","_","groupBy","Object","entries","key","getHoursMinutesFormat","reduce","b","handleCreate","currentCategory","handleCategoryDetails","handleUpdate","handleDelete","handleSelect","minutes","utc","asMilliseconds","reloadCategorys","handleCreateRoot","handleCreateCategory","renderTree","arr","node","children","NoCategorySelected","Task","description","startedAt","finishedAt","timeConversation","diff","started","toISOString","finished","API","create","baseURL","interceptors","request","use","req","headers","Authorization","signIn","formData","signUp","paper","spacing","root","avatar","secondary","form","submit","googleButton","marginBottom","Input","handleChange","half","autoFocus","handleShowPassword","Grid","item","xs","sm","TextField","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstname","lastname","email","password","confirmPassword","SignUp","setForm","isSignup","showPassword","setShowPassword","Container","maxWidth","Paper","elevation","Avatar","router","signin","container","justify","Home","setData","showTaskModal","setShowTaskModal","selectedTask","setSelectedTask","reloadCategories","handleCreateTask","App","exact","render","Auth","store","createStore","compose","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.bf7123cf.chunk.js","sourcesContent":["import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const FETCH_POST = 'FETCH_POST';\nexport const LIKE = 'LIKE';\nexport const COMMENT = 'COMMENT';\nexport const END_LOADING = 'END_LOADING';\nexport const START_LOADING = 'START_LOADING';\nexport const FETCH_BY_CREATOR = 'FETCH_BY_CREATOR';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\nimport auth from './auth';\n\nexport const reducers = combineReducers({ posts, auth });\n","import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_BY_CREATOR, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return { ...state, isLoading: true };\n    case 'END_LOADING':\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n    case FETCH_BY_CREATOR:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id == +action.payload._id) {\n            return action.payload;\n          }\n          return post;\n        }),\n      };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n    default:\n      return state;\n  }\n};\n\n","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  heading: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    fontSize: '2em',\n    fontWeight: 300,\n  },\n  image: {\n    marginLeft: '10px',\n    marginTop: '5px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n    },\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n      marginTop: 20,\n      justifyContent: 'center',\n    },\n  },\n  logout: {\n    marginLeft: '20px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport config from '../config.json'\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n/* \nimport memoriesLogo from '../../images/memoriesLogo.png';\nimport memoriesText from '../../images/memoriesText.png'; */\nimport * as actionType from '../constants/actionTypes';\nimport useStyles from './styles'; \n\nexport default function Header(props) {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/login');\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n    return (\n        <nav className=\"navbar navbar-expand-xs navbar-expand-sm navbar-expand-md navbar-light bg-light\" style={{height: '26px'}}>\n            {<a className=\"navbar-brand text-white\" href=\"/\">\n                <i className=\"fas fa-clipboard-check\" style={{fontSize: '26px', marginRight: '10px'}}></i>\n                {config.appTitle}\n            </a>}\n\n            <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            {/* <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar> */}\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\n            {/* <Button variant=\"contained\" className={classes.logout} color=\"secondary\" style={{\n                marginLeft: 950\n            }}\n            onClick={logout}\n             >Logout</Button> */}\n          </div>\n        ) : (\n          <Button component={Link} to=\"/login\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n      </Toolbar>\n\n            {/* <a className=\"navbar-brand text-white\" href=\"/user/logout\" style={{\n                marginLeft: 1000\n            }}>\n                <i className=\"fas fa-sign-out-alt\" style={{fontSize: '26px', marginRight: '10px'}}></i>\n                Logout\n            </a> */}\n        </nav>\n    );\n}","import axios from 'axios';\n//import config from '../config.json';\nimport moment from \"moment\";\nconst config = { api: process.env.REACT_APP_API_URL};\n\nconsole.log('config :', config);\n\nexport default class {\n\n     static getAll = async keyword => {\n        \n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.post(`${config.api}/categories/all`, {keyword: keyword})\n            .then(resp => {\n                //console.log('cool : ');\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                //console.log('pas cool : ', err);\n                result.error = err.response.data;\n            });\n\n        return result;\n    } \n\n    static getAllFlat = async keyword => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.post(`${config.api}/categories/all-flat`, {keyword: keyword})\n            .then(resp => {\n                console.log(resp);\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static add = async (label, parentCategoryId) => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        const data = {\n            label: label,\n            parentCategoryId: parentCategoryId,\n            dateCreated: moment().format(),\n            dateUpdated: moment().format()\n        };\n\n        await axios.post(`${config.api}/categories`, data)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static update = async (id, label, parentCategoryId) => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        const data = {\n            label: label,\n            parentCategoryId: parentCategoryId,\n            dateUpdated: moment().format()\n        };\n\n        await axios.post(`${config.api}/categories/${id}`, data)\n            .then(resp => {\n                console.log('passed : ', resp);\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                console.log('error : ', err);\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static getPath = async id => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.get(`${config.api}/categories/${id}`)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static delete = async id => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.delete(`${config.api}/categories/${id}`)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static getDuration = async (categoryId, beginDate, endDate) => {\n\n        let result = {\n            data: null,\n            error: null\n        };\n        await axios.post(`${config.api}/categories/totalDuration`,{categoryId, beginDate, endDate})\n            .then(resp => {\n                \n                if (resp.status === 200) {\n                    result.data = resp.data;\n                    //console.log('nuit : ', result);\n                }\n            })\n            .catch(err => {\n                \n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n}","\nimport Swal from 'sweetalert2';\n\nexport const swalCategory = (label, parentCategoryLabel, callback) => {\n    Swal.fire({\n        title: label.length > 0 ? 'Update category' : 'Create category',\n        html: `<input id=\"txt-label\" class=\"swal2-input\" placeholder=\"Category label...\" value=\"${label}\" />`,\n        showCancelButton: true,\n        confirmButtonText: label.length > 0 ? 'Update' : 'Create',\n        showLoaderOnConfirm: true,\n        footer: parentCategoryLabel.length > 0 ? `<span>You are creating a new category under <strong>${parentCategoryLabel}</strong></span>` : ``,\n        preConfirm: () => {\n            const text = document.getElementById('txt-label').value;\n            if (!text || text.length === 0)\n                return Swal.showValidationMessage(`Please provide category label.`);\n        },\n    }).then(result => {\n        if(result.value) {\n            const label = document.getElementById('txt-label').value;\n            callback(label);\n        }\n    });\n}\n\nexport const swalDeleteForm = callback => {\n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n        if (result.value) {\n            callback();\n        }\n    });\n}\n\nexport const swalDeleteCategory = callback => {\n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        footer: `<strong>Warning!</strong>&nbsp;This Category, all its Sub-Categories and the Tasks in these categories will be deleted!`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n        if (result.value) {\n            callback();\n        }\n    });\n}\n\nexport const swalError = message => {\n    Swal.fire({\n        position: 'top-end',\n        icon: 'error',\n        title: message,\n        showConfirmButton: true\n    });\n}\n\nexport const swalSuccess = message => {\n    Swal.fire({\n        position: 'top-end',\n        icon: 'success',\n        title: message,\n        showConfirmButton: false,\n        timer: 800\n    });\n}\n\nexport const swalInfo = message => {\n    Swal.fire({\n        position: 'top-end',\n        icon: 'info',\n        title: message,\n        showConfirmButton: true\n    });\n}\n\nexport const swalLoading = () => {\n    Swal.fire({\n        title: 'Loading...',\n        text: \"Please wait.\",\n        timerProgressBar: true,\n        showConfirmButton: false,\n        showCancelButton: false,\n        allowEscapeKey: false,\n        allowOutsideClick: false,\n        onBeforeOpen: () => {\n            Swal.showLoading();\n        }\n    });\n}","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport {Badge} from 'reactstrap';\nimport categoryService from '../services/category';\nimport Swal from \"sweetalert2\";\nimport {swalError} from \"../utils/swal\";\n//import dates from 'react-big-calendar/lib/utils/dates';\n\n/*import NoCategorySelected from \"./NoCategorySelected\";\nimport taskService from '../services/task';*/\n\nfunction CalendarView(props) {\n\n   /*  const [start, setStart] = useState(Date.now());\n    const [end, setEnd] = useState(Date.now()); */\n    const [selectedDay, setSelectedDay] = useState(new Date())\n    const [duration, setDuration] = useState('');\n    const [view, setView] = useState('month');\n    //const [selectedCategory, setSelectedCategory] = useState(props.selectedCategory);\n    //const selectedCategory = props.selectedCategory;\n\n    useEffect(() => {\n\n        console.log('called');\n\n        console.log('selected category : ', props.selectedCategory);\n        let beginDate, endDate;\n       /*  var beginDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth(), 1)).format('YYYY-MM-DD');\n        var endDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth() + 1, 0)).format('YYYY-MM-DD'); */\n        if (view === 'month') {\n\n            beginDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth(), 1)).format('YYYY-MM-DD');\n            endDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth() + 1, 0)).format('YYYY-MM-DD');\n         } \n         else if(view === 'week'){\n            \n            beginDate = moment(selectedDay).startOf(\"isoWeek\").toDate();\n            endDate = moment(selectedDay).endOf(\"isoWeek\").toDate();\n           \n        } else if(view === 'day'){\n            beginDate = moment(selectedDay).toDate();\n            endDate = moment(selectedDay).toDate();\n        } else if(view === 'agenda'){\n            beginDate = moment(selectedDay).startOf('day');\n            endDate   = moment(selectedDay).endOf('day').add(1, 'month');\n        }\n\n        categoryService.getDuration(props.selectedCategory._id, beginDate, endDate)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                var x = result.data.duration * 1000 * 60;\n                var d = moment.duration(x, 'milliseconds');\n                var hours = Math.floor(d.asHours());\n                var mins = Math.floor(d.asMinutes()) - hours * 60;\n                console.log('la durée converti : '+hours + \" hours:\" + mins + \" mins:\");\n                const theDuration = hours + \" h \" + mins + \" mn\";\n\n                //setTotalDuration(theDuration)\n                setDuration(theDuration);\n            });\n       \n    }, [props.selectedCategory]);\n\n    moment.locale(\"en\", {\n        week: {\n            dow: 1\n        }\n    })\n    const localizer = momentLocalizer(moment);\n\n    const handleSelect = ({ start, end }) => {\n        //console.log('change select');\n    }\n\n    //const getTimeFromMins = (mins) => {\n        // do not include the first validation check if you want, for example,\n        // getTimeFromMins(1530) to equal getTimeFromMins(90) (i.e. mins rollover)\n        /* if (mins >= 24 * 60 || mins < 0) {\n            throw new RangeError(\"Valid input should be greater than or equal to 0 and less than 1440.\");\n        }\n        var h = mins / 60 | 0,\n            m = mins % 60 | 0;\n        return moment.utc().hours(h).minutes(m).format(\"hh:mm A\");\n    } */\n    \n\n    const onNavigate = (date, view) => {\n        let beginDate, endDate;\n        setSelectedDay(date)\n      \n        if (view === 'month') {\n\n            beginDate = moment(new Date(date.getFullYear(), date.getMonth(), 1)).format('YYYY-MM-DD');\n            endDate = moment(new Date(date.getFullYear(), date.getMonth() + 1, 0)).format('YYYY-MM-DD');\n         } \n         else if(view === 'week'){\n             \n            /* start = moment(date).startOf('week').startOf('day')\n            end = moment(date).endOf('week').endOf('day') */\n            \n            beginDate = moment(date).startOf(\"isoWeek\").toDate();\n            endDate = moment(date).endOf(\"isoWeek\").toDate();\n           /*  var beginDate = moment(new Date(date.getFullYear(), date.getMonth(), 1)).format('YYYY-MM-DD');\n            var endDate = moment(new Date(date.getFullYear(), date.getMonth() + 1, 0)).format('YYYY-MM-DD'); */\n\n            //console.log('start of week : '+ beginDate + ' end of week :'+ endDate);\n        } else if(view === 'day'){\n            console.log('clacaa : ', date);\n            beginDate = moment(date).toDate();;\n            endDate = moment(date).toDate();;\n        } else if(view === 'agenda'){\n            beginDate = moment(date).startOf('day');\n            endDate   = moment(date).endOf('day').add(1, 'month');\n        }\n\n       /*  var beginDate = moment(new Date(date.getFullYear(), date.getMonth(), 1)).format('YYYY-MM-DD');\n        var endDate = moment(new Date(date.getFullYear(), date.getMonth() + 1, 0)).format('YYYY-MM-DD'); */\n        console.log('first day : '+ beginDate +  ' last day : ', endDate);\n\n        categoryService.getDuration(props.selectedCategory._id, beginDate, endDate)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                var x = result.data.duration * 1000 * 60;\n                var d = moment.duration(x, 'milliseconds');\n                var hours = Math.floor(d.asHours());\n                var mins = Math.floor(d.asMinutes()) - hours * 60;\n                console.log('DUREE ON NAVIGATE '+hours + \" hours:\" + mins + \" mins:\");\n                const theDuration = hours + \" h \" + mins + \" mn\";\n\n                setDuration(theDuration);\n            });\n      \n        //return console.log({ beginDate, end });\n      }\n\n      const onSelectView = (view) => {\n            setView(view)\n          console.log('view selected : '+ view);\n          let beginDate, endDate;\n\n        console.log('navigate')\n      \n        if (view === 'month') {\n            console.log('month');\n            \n            beginDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth(), 1)).format('YYYY-MM-DD');\n            endDate = moment(new Date(selectedDay.getFullYear(), selectedDay.getMonth() + 1, 0)).format('YYYY-MM-DD');\n         } \n         else if(view === 'week'){\n             console.log('week');\n            \n            beginDate = moment(selectedDay).startOf(\"isoWeek\").toDate();\n            endDate = moment(selectedDay).endOf(\"isoWeek\").toDate();\n\n             console.log('start of week : '+ beginDate + ' end of week :'+ endDate);\n        }\n        else if(view === 'day'){\n            beginDate = moment(selectedDay).toDate();\n            endDate = moment(selectedDay).toDate();\n        }\n        else if(view === 'agenda'){\n            console.log('agenda');\n            beginDate = moment(selectedDay).startOf('day');\n            endDate   = moment(selectedDay).endOf('day').add(1, 'month');\n        }\n\n        console.log('first day : '+ beginDate +  ' last day : ', endDate);\n\n        categoryService.getDuration(props.selectedCategory._id, beginDate, endDate)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                var x = result.data.duration * 1000 * 60;\n                var d = moment.duration(x, 'milliseconds');\n                var hours = Math.floor(d.asHours());\n                var mins = Math.floor(d.asMinutes()) - hours * 60;\n                console.log(hours + \" hours:\" + mins + \" mins:\");\n                const theDuration = hours + \" h \" + mins + \" mn\";\n\n                setDuration(theDuration);\n            });\n      \n        //return console.log({ beginDate, end });\n      }\n\n    const handleSelectEvent = task => {\n        console.log('see task selected : ', task)\n        props.viewTaskDetails(task);\n    }\n\n    return (\n        <div style={{height: '90vh'}}>\n             <Badge color='warning' pill>\n             Total duration : {duration}\n      </Badge>\n            <Calendar\n                popup\n                selectable\n                localizer={localizer}\n                events={props.tasks}\n                onSelectSlot={handleSelect}\n                onSelectEvent={handleSelectEvent}\n                onNavigate={onNavigate}\n                onView={onSelectView}\n            />\n           \n        </div>\n    );\n}\n\nexport default CalendarView;","import axios from 'axios';\n//import config from '../config.json';\nconst config = { api: process.env.REACT_APP_API_URL};\n\nexport default class {\n\n    static getAll = async categoryId => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.post(`${config.api}/tasks/all`, {categoryId: categoryId})\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static add = async obj => {\n        //obj.started\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.post(`${config.api}/tasks`, obj)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static update = async (id, obj) => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.post(`${config.api}/tasks/${id}`, obj)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static get = async id => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.get(`${config.api}/tasks/${id}`)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n\n    static delete = async id => {\n        let result = {\n            data: null,\n            error: null\n        };\n\n        await axios.delete(`${config.api}/tasks/${id}`)\n            .then(resp => {\n                if (resp.status === 200) {\n                    result.data = resp.data;\n                }\n            })\n            .catch(err => {\n                result.error = err.response.data;\n            });\n\n        return result;\n    }\n}","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\n//import taskService from '../services/task';\nimport categoryService from '../services/category';\nimport {\n    //swalDeleteForm,\n    swalError,\n    //swalInfo, \n    //swalSuccess\n    } from \"../utils/swal\";\nimport Swal from \"sweetalert2\";\n\nfunction Category(props) {\n\n    const [path, setPath] = useState('');\n\n    useEffect(() => {\n        categoryService.getPath(props.category._id)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                setPath(result.data.path);\n            });\n    }, []);\n\n    return (\n        <Rodal visible={true}\n               onClose={() => {\n                   props.onClose();\n               }}\n               closeOnEsc={false}\n               closeMaskOnClick={false}\n               customStyles={{width: '50%', height: '70%', overflow: 'auto'}}>\n            <div className=\"container-fluid text-center\">\n                <h4 className=\"m-4\">Category Details</h4>\n                <div className=\"row\">\n                    <div className=\"col text-left\">\n                        <p><strong>Label: </strong> {props.category.label}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-left\">\n                        <p><strong>Creation date: </strong> {moment(props.category.dateCreated).format(\"YYYY-MM-DD HH:mm\")}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-left\">\n                        <p><strong>Last updated: </strong> {moment(props.category.dateUpdated).format(\"YYYY-MM-DD HH:mm\")}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-left\">\n                        <p><strong>Path: </strong> {path}</p>\n                    </div>\n                </div>\n            </div>\n        </Rodal>\n    );\n}\n\nexport default Category;","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport categoryService from '../services/category';\nimport {swalDeleteForm, swalError, swalSuccess} from \"../utils/swal\";\nimport Swal from \"sweetalert2\";\nimport SelectSearch, {fuzzySearch} from 'react-select-search';\nimport 'react-select-search/style.css';\n\n/* import ReactDOM from 'react-dom'\n\nimport DropdownTreeSelect from 'react-dropdown-tree-select' */\nimport 'react-dropdown-tree-select/dist/styles.css'\n\nfunction CategoryForm(props) {\n\n    console.log('props : ', props);\n\n    const currentDateTime = moment();\n    const [label, setLabel] = useState('');\n    const [categoryId, setCategoryId] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [description, setDescription] = useState('');\n    const [startedAt, setStartedAt] = useState(currentDateTime);\n    const [finishedAt, setFinishedAt] = useState(currentDateTime);\n    const [categories, setCategories] = useState([]);\n\n    const reloadPage = () => {\n        setTimeout(() => {\n            window.location.reload();\n        }, 2000);\n    }\n    \n\n    useEffect(() => {       \n\n        categoryService.getAllFlat(\"\")\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                setCategories(result.data);\n                if (props.category) {\n                    console.log(props.category);\n                    setLabel(props.category.label.split('|')[0]);\n                    setParentCategoryId(props.category.parentCategoryId)\n                    /* setCategoryId(props.category.categoryId);\n                    setDescription(props.category.description);\n                    setStartedAt(moment(props.category.start).format(\"YYYY-MM-DDTHH:mm\"));\n                    setFinishedAt(moment(props.category.end).format(\"YYYY-MM-DDTHH:mm\")); */\n                }\n            });\n    }, []);\n\n    const handleSubmit = async e => {\n        console.log('payload : ', {label, parentCategoryId});\n        e.preventDefault();        \n\n        if (!props.category) {\n            await categoryService.add(label, parentCategoryId).then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Category added successfully!');\n                clear();\n                //props.reloadTasks();\n                props.onClose();\n                reloadPage();\n            });\n        } else {\n            await categoryService.update(props.category._id, label,\n                parentCategoryId).then(result => {\n                    console.log('result : ', result);\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Category updated successfully!');\n                clear();\n                //props.reloadTasks();\n                props.onClose();\n                reloadPage();\n            });\n        }\n    }\n\n    const handleDelete = e => {\n        swalDeleteForm(async () => {\n            await categoryService.delete(props.category._id)\n                .then(result => {\n                    if (result.error) {\n                        swalError(result.error);\n                        return;\n                    }\n\n                    Swal.close();\n                    swalSuccess('Category deleted successfully!');\n                    clear();\n                    //props.reloadTasks();\n                    props.onClose();\n                });\n        });\n    }\n\n    const clear = () => {\n        setLabel('');\n        setDescription('');\n        setCategoryId('');\n        setParentCategoryId('');\n        const currentDateTime = moment().format(\"YYYY-MM-DDThh:mm\");\n        setStartedAt(currentDateTime);\n        setFinishedAt(currentDateTime);\n    }\n   \n\n    return (\n       \n        <Rodal visible={true}\n               onClose={() => {\n                   clear();\n                   props.onClose();\n               }}\n               closeOnEsc={false}\n               closeMaskOnClick={false}\n               customStyles={{width: '50%', height: '70%', overflow: 'auto'}}>\n            <div className=\"container-fluid text-center\">\n                <form onSubmit={handleSubmit}>\n                    <h4 className=\"m-4\">{props.category && 'Update Category' || 'Create Category'}</h4>\n                    {/*<div className=\"row\">*/}\n                    {/*    <div className=\"col text-left\">*/}\n                    {/*        <label><i>You are {props.category && 'updating' || 'adding'} this Category*/}\n                    {/*            in <strong>{props.selectedCategory.label} </strong>category.</i></label>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtLabel\">Category label</label>\n                                <input type=\"text\" className=\"form-control\"\n                                       placeholder=\"Label or Title...\" required=\"required\"\n                                       id=\"txtLabel\"\n                                       value={label} onChange={e => setLabel(e.target.value)}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtLabel\">Category</label>\n                                {/* <DropdownTreeSelect data={categories} onChange={onChange} onAction={onAction} onNodeToggle={onNodeToggle} \n                                keepTreeOnSearch={true} mode=\"radioSelect\" keepOpenOnSelect={true}/> */}\n\n                                <SelectSearch\n                                    value={parentCategoryId}\n                                    //defaultValue={{value:props.category.parentCategoryId, label: '9999'}}\n                                    onChange={setParentCategoryId}\n                                    emptyMessage=\"Not found\"\n                                    placeholder=\"Select category\"\n                                    search\n                                    filterOptions={fuzzySearch}\n                                    options={categories}\n                                    style={{width: '100%'}}\n                                />\n                            </div>\n                        </div>\n                    </div>              \n              \n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary m-1\"\n                                onClick={props.onClose}>Close\n                            </button>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary m-1\"\n                                onClick={handleSubmit}>Submit\n                            </button>\n                            {\n                                props.category &&\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger m-1\"\n                                    onClick={handleDelete}>Delete\n                                </button>\n                            }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </Rodal>\n    );\n}\n\nexport default CategoryForm;","import React, {useState, useEffect} from 'react';\nimport categoryService from '../services/category';\nimport taskService from '../services/task';\nimport {swalCategory, swalDeleteCategory, swalError, swalLoading, swalSuccess} from \"../utils/swal\";\nimport Swal from \"sweetalert2\";\n/* import CalendarView from \"./CalendarView\";\nimport Header from \"./Header\"; */\nimport Category from \"./Category\";\n//import { Link } from 'react-router-dom';\nimport CategoryForm from './CategoryForm';\nimport _ from \"lodash\";\nimport moment from 'moment';\n\nfunction TreeView(props) {\n\n    const [showCategoryDetailsPopup, setShowCategoryDetailsPopup] = useState(false);\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [selectedUpdateCategory, setSelectedUpdateCategory] = useState(null);\n   // const [currentCategoryParent, setCurrentCategoryParent] = useState('');\n\n    const [showCategoryModal, setShowCategoryModal] = useState(false);\n    const [showCategoryUpdateModal, setShowCategoryUpdateModal] = useState(false);\n    \n    const [totalDuration, setTotalDuration] = useState(0);\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        reloadLibs();\n        //reloadTasks();\n    }, []);\n\n    const handleCreateCategory = e => {\n        e.preventDefault();\n        setShowCategoryModal(true);\n       \n    }\n\n    const reloadPage = () => {\n        setTimeout(() => {\n            window.location.reload();\n        }, 2000);\n    }\n\n    const reloadLibs = () => {\n        setTimeout(() => {\n            if (document.querySelector(`script[src*=\"/js/script.js\"]`))\n                document.querySelector(`script[src*=\"/js/script.js\"]`).remove();\n\n            let js = document.createElement(\"script\");\n            js.src = \"/js/script.js\";\n            js.type = \"text/javascript\";\n            document.getElementsByTagName('body')[0].appendChild(js);\n        }, 2000);\n    }\n\n    const reloadTasks = async () => {\n        await taskService.getAll(selectedCategory._id)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                setTotalDuration(result.data.duration);\n\n                let f = Array.from(result.data.tasks);\n                let groups = _.groupBy(result.data.tasks, obj => moment(obj.start).startOf('day').format());\n                for (const [key, value] of Object.entries(groups)) {\n                    f.push({\n                        _id: value._id,\n                        categoryId: value.categoryId,\n                        title: `Total ${getHoursMinutesFormat(value.reduce((a, b) => a + b.duration, 0))}`,\n                        start: moment(key).toDate(),\n                        end: moment(key).toDate()\n                    });\n                }\n                \n                f = f.map(x => {\n                    return {\n                        ...x,\n                        start: moment(x.start).toDate(),\n                        end: moment(x.end).toDate()\n                    };\n                });\n\n                setTasks(f);\n            });\n    } \n\n    const handleCreate = (e, currentCategory) => {\n        e.preventDefault();\n\n        swalCategory('', currentCategory.label, async label => {\n            swalLoading();\n            await categoryService.add(label, currentCategory._id)\n                .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Category added successfully!');\n                reloadPage();\n            });\n        });\n    }\n\n    const handleCategoryDetails = (e, currentCategory) => {\n        e.preventDefault();\n        setSelectedCategory(currentCategory);\n        setShowCategoryDetailsPopup(true);\n    }\n\n    const handleCreateRoot = e => {\n        e.preventDefault();\n\n        swalCategory('', '', label => {\n            swalLoading();\n            categoryService.add(label, '').then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Category added successfully!');\n                reloadPage();\n            });\n        });\n    }\n\n    const handleUpdate = (e, currentCategory) => {\n        e.preventDefault();\n        setSelectedCategory(currentCategory);\n        //setCurrentCategoryParent(currentCategory.parentCategoryId)\n        setShowCategoryUpdateModal(true);\n\n        /* swalCategory(currentCategory.label, '', async label => {\n            swalLoading();\n            await categoryService.update(currentCategory._id, label)\n                .then(result => {\n                    if (result.error) {\n                        swalError(result.error);\n                        return;\n                    }\n\n                    Swal.close();\n                    swalSuccess('Category updated successfully!');\n                    reloadPage();\n                });\n        }); */\n    }\n\n    const handleDelete = (e, currentCategory) => {\n        swalDeleteCategory(async () => {\n            await categoryService.delete(currentCategory._id)\n                .then(result => {\n                    if (result.error) {\n                        swalError(result.error);\n                        return;\n                    }\n\n                    Swal.close();\n                    swalSuccess('Category deleted successfully!');\n                    reloadPage();\n                });\n        });\n    }\n\n    const handleSelect = (e, currentCategory) => {\n        console.log('select one category');\n        props.setSelectedCategory(currentCategory);\n    }\n\n    const renderTree = arr => {\n        return arr.map(node => {\n            if (node.children.length > 0) {\n                return <li key={node._id}>\n                    <a onClick={e => handleSelect(e, node)}><i className=\"far fa-folder\"></i>{node.label}</a>\n                    <i className=\"fa fa-eye\" onClick={e => handleCategoryDetails(e, node)} title=\"View details\"></i>\n                    <i className=\"fa fa-plus\" onClick={e => handleCreate(e, node)} title=\"Add sub category\"></i>\n                    <i className=\"fa fa-pencil-alt\" onClick={e => handleUpdate(e, node)} title=\"Edit this category\"></i>\n                    <i className=\"fa fa-trash\" onClick={e => handleDelete(e, node)} title=\"Delete this category\"></i>\n                    <ul>\n                        {renderTree(node.children)}\n                    </ul>\n                </li>;\n            } else {\n                return <li key={node._id}>\n                    <a onClick={e => handleSelect(e, node)}>{node.label}</a>\n                    <i className=\"fa fa-eye\" onClick={e => handleCategoryDetails(e, node)} title=\"View details\"></i>\n                    <i className=\"fa fa-plus\" onClick={e => handleCreate(e, node)} title=\"Add sub category\"></i>\n                    <i className=\"fa fa-pencil-alt\" onClick={e => handleUpdate(e, node)} title=\"Edit this category\"></i>\n                    <i className=\"fa fa-trash\" onClick={e => handleDelete(e, node)} title=\"Delete this category\"></i>\n                </li>\n            }\n        });\n    }\n\n    const getHoursMinutesFormat = minutes => moment.utc(moment.duration(minutes*60, \"seconds\").asMilliseconds()).format(\"HH:mm\");\n\n\n    return (\n        <div>\n            {\n                showCategoryModal &&\n                <CategoryForm\n                    task={selectedCategory}\n                    onClose={() => {setSelectedCategory(null); setShowCategoryModal(false);}}\n                    reloadCategorys={reloadTasks}\n                     />\n            }\n            {\n                showCategoryUpdateModal &&\n                <CategoryForm\n                    category={selectedCategory}\n                    onClose={() => {setSelectedUpdateCategory(null); setShowCategoryUpdateModal(false);}}\n                    reloadCategorys={reloadTasks}\n                     />\n            }\n            {selectedCategory && showCategoryDetailsPopup && <Category category={selectedCategory} onClose={() => {setSelectedCategory(null); setShowCategoryDetailsPopup(false);}} />}\n            <div className=\"row\">\n                <div className=\"col text-left\">\n                    <a href=\"#\" onClick={e => handleCreateRoot(e)} className=\"btn-purple\">\n                        <i\n                            className=\"fa fa-plus-circle\"\n                            style={{fontSize: '20px', marginRight: '8px'}}\n                        ></i>\n                        Root category\n                    </a>\n                    {/* <Button component={Link} to=\"/categoryAdd\" variant=\"contained\" color=\"primary\">Add new category</Button> */}\n                </div>\n                <div className=\"col text-right\" style={{marginRight: '108px'}}>\n                    <a href=\"#\" onClick={e => handleCreateCategory(e)} className=\"btn-purple\">\n                        <i\n                            className=\"fa fa-plus-circle\"\n                            style={{fontSize: '20px', marginRight: '8px'}}\n                        ></i>\n                        Category\n                    </a>\n                    {/* <Button component={Link} to=\"/categoryAdd\" variant=\"contained\" color=\"primary\">Add new category</Button> */}\n                </div>\n            </div>\n            <div className=\"row mt-10\">\n                <div className=\"col\">\n                    <ul id=\"treeview\" className=\"jslists\">\n                        {renderTree(props.data)}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TreeView;","import React from 'react';\n\nfunction NoCategorySelected(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <p className=\"not-selected\"><i className=\"fa fa-exclamation m-3\"></i>Category not selected</p>\n                    <p className=\"not-selected-hint\"><i className=\"fa fa-quote-left m-2\"></i>Please select a category to load its Tasks Calendar.<i className=\"fa fa-quote-right m-2\"></i></p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default NoCategorySelected;","import React, {useState, useEffect} from 'react';\nimport moment, { duration } from 'moment';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport taskService from '../services/task';\nimport categoryService from '../services/category';\nimport {swalDeleteForm, swalError, swalInfo, swalSuccess} from \"../utils/swal\";\nimport Swal from \"sweetalert2\";\nimport SelectSearch, {fuzzySearch} from 'react-select-search';\nimport 'react-select-search/style.css';\n\n/* import ReactDOM from 'react-dom'\n\nimport DropdownTreeSelect from 'react-dropdown-tree-select' */\nimport 'react-dropdown-tree-select/dist/styles.css'\n\nfunction Task(props) {\n\n    const currentDateTime = moment();\n    const [label, setLabel] = useState('');\n    const [categoryId, setCategoryId] = useState('');\n    const [description, setDescription] = useState('');\n    const [startedAt, setStartedAt] = useState(currentDateTime);\n    const [finishedAt, setFinishedAt] = useState(currentDateTime);\n    const [categories, setCategories] = useState([]);\n\n    /* const onChange = (currentNode, selectedNodes) => {\n\n        console.log('the value : ', currentNode, selectedNodes);\n        setCategoryId(currentNode.value)\n        \n      }\n      const onAction = (node, action) => {\n        console.log('onAction::', action, node)\n      }\n      const onNodeToggle = currentNode => {\n        console.log('onNodeToggle::', currentNode)\n      } */\n\n    const timeConversation = (duration) => {\n        var x = duration * 1000 * 60;\n        var d = moment.duration(x, 'milliseconds');\n        var hours = Math.floor(d.asHours());\n        var mins = Math.floor(d.asMinutes()) - hours * 60;\n        console.log('DUREE ON NAVIGATE '+hours + \" hours:\" + mins + \" mins:\");\n        const theDuration = hours + \" h \" + mins + \" mn\";\n        return theDuration\n    } \n\n    useEffect(() => {\n\n        /* categoryService.getAll(\"\")            \n            .then(result => {\n                console.log('***************************************************');\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n               \n                console.log('resul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datyaresul.datya: ', result.data);\n                setCategories(result.data);\n                console.log('categoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategoriescategories: ', categories);\n              \n            }); */\n\n        categoryService.getAllFlat(\"\")\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                setCategories(result.data);\n                if (props.task) {\n                    console.log(props.task);\n                    setLabel(props.task.title.split('|')[0]);\n                    setCategoryId(props.task.categoryId);\n                    setDescription(props.task.description);\n                    setStartedAt(moment(props.task.start).format(\"YYYY-MM-DDTHH:mm\"));\n                    setFinishedAt(moment(props.task.end).format(\"YYYY-MM-DDTHH:mm\"));\n                }\n            });\n    }, []);\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const duration = moment.duration(moment(finishedAt).diff(moment(startedAt))).asMinutes();\n        if (duration <= 0) {\n            swalInfo(`Task duration is not valid.`);\n            return;\n        }\n\n            const started = new Date(startedAt).toISOString();\n            const finished = new Date(finishedAt).toISOString();\n        if (!props.task) {\n\n            //console.log('moment.utc(startedAt : ',moment.utc(startedAt));\n           \n            \n            //console.log('new Date (startedAt) :', new Date(startedAt).toISOString());\n\n            await taskService.add({\n                label,\n                description,\n                startedAt: started,\n                finishedAt: finished,\n                duration: duration,\n                categoryId\n            }).then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Task added successfully!');\n                clear();\n                props.reloadTasks();\n                props.onClose();\n            });\n        } else {\n            await taskService.update(props.task._id, {\n                label,\n                description,\n                startedAt: started,\n                finishedAt: finished,\n                duration: duration,\n                categoryId\n            }).then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                Swal.close();\n                swalSuccess('Task updated successfully!');\n                clear();\n                props.reloadTasks();\n                props.onClose();\n            });\n        }\n    }\n\n    const handleDelete = e => {\n        swalDeleteForm(async () => {\n            await taskService.delete(props.task._id)\n                .then(result => {\n                    if (result.error) {\n                        swalError(result.error);\n                        return;\n                    }\n\n                    Swal.close();\n                    swalSuccess('Task deleted successfully!');\n                    clear();\n                    props.reloadTasks();\n                    props.onClose();\n                });\n        });\n    }\n\n    const clear = () => {\n        setLabel('');\n        setDescription('');\n        setCategoryId('');\n        const currentDateTime = moment().format(\"YYYY-MM-DDThh:mm\");\n        setStartedAt(currentDateTime);\n        setFinishedAt(currentDateTime);\n    }\n   \n\n    return (\n       \n        <Rodal visible={true}\n               onClose={() => {\n                   clear();\n                   props.onClose();\n               }}\n               closeOnEsc={false}\n               closeMaskOnClick={false}\n               customStyles={{width: '50%', height: '70%', overflow: 'auto'}}>\n            <div className=\"container-fluid text-center\">\n                <form onSubmit={handleSubmit}>\n                    <h4 className=\"m-4\">{props.task && 'Update Task' || 'Create Task'}</h4>\n                    {/*<div className=\"row\">*/}\n                    {/*    <div className=\"col text-left\">*/}\n                    {/*        <label><i>You are {props.task && 'updating' || 'adding'} this Task*/}\n                    {/*            in <strong>{props.selectedCategory.label} </strong>category.</i></label>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                    <input type=\"hidden\" id=\"timezone\" name=\"timezone\" value=\"+02:00\"></input>\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtLabel\">Task label</label>\n                                <input type=\"text\" className=\"form-control\"\n                                       placeholder=\"Label or Title...\" required=\"required\"\n                                       id=\"txtLabel\"\n                                       value={label} onChange={e => setLabel(e.target.value)}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtLabel\">Category</label>\n                                {/* <DropdownTreeSelect data={categories} onChange={onChange} onAction={onAction} onNodeToggle={onNodeToggle} \n                                keepTreeOnSearch={true} mode=\"radioSelect\" keepOpenOnSelect={true}/> */}\n\n                                <SelectSearch\n                                    value={categoryId}\n                                    onChange={setCategoryId}\n                                    emptyMessage=\"Not found\"\n                                    placeholder=\"Select category\"\n                                    search\n                                    filterOptions={fuzzySearch}\n                                    options={categories}\n                                    style={{width: '100%'}}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtDescription\">Description</label>\n                                <textarea className=\"form-control\"\n                                          placeholder=\"Description...\" required=\"required\"\n                                          id=\"txtDescription\"\n                                          value={description} onChange={e => setDescription(e.target.value)}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    {\n                        props.task &&\n                        <div className=\"row\">\n                            <div className=\"col text-left\">\n                                <label><i>\n                                    Task duration is <strong>{timeConversation(moment.duration(moment(props.task.end).diff(moment(props.task.start))).asMinutes())}</strong></i></label>\n                            </div>\n                        </div>\n                    }\n                    {\n                        !props.task &&\n                        <div className=\"row\">\n                            <div className=\"col text-left\">\n                                <label><i>\n                                    Task duration is <strong>{timeConversation(moment.duration(moment(finishedAt).diff(moment(startedAt))).asMinutes())}</strong></i></label>\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtStart\">Starting at</label>\n                                {console.log('staaaaaaaaaaarted at : ', startedAt)}\n                                <input type=\"datetime-local\" className=\"form-control\"\n                                       value={startedAt} onChange={e => {\n                                           console.log('choosen dateHour :', e.target.value);\n                                           setStartedAt(e.target.value)\n                                       }}/>\n                            </div>\n                        </div>\n                        <div className=\"col text-left\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"txtStart\">Finished at</label>\n                                <input type=\"datetime-local\" className=\"form-control\"\n                                       value={finishedAt} onChange={e => setFinishedAt(e.target.value)}/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-secondary m-1\"\n                                onClick={props.onClose}>Close\n                            </button>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary m-1\"\n                                onClick={handleSubmit}>Submit\n                            </button>\n                            {\n                                props.task &&\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger m-1\"\n                                    onClick={handleDelete}>Delete\n                                </button>\n                            }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </Rodal>\n    );\n}\n\nexport default Task;","import axios from 'axios';\n//const API = axios.create({ baseURL: 'http://localhost:4000' });\nconsole.log('VUE APP URL : ', process.env.REACT_APP_API_URL);\nconst API = axios.create({ baseURL: process.env.REACT_APP_API_URL});\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsByCreator = (name) => API.get(`/posts/creator?name=${name}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n//import { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\n//import Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstname: '', lastname: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    const token = localStorage.getItem('profile');\n     if(token) {\n         history.push('/');\n     }\n    \n }, []);   \n\n\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  /* const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  }; */\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('form : ', form);\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  /* const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  }; */\n\n  //const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={6}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstname\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastname\" label=\"Last Name\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          {/* <GoogleLogin\n            clientId=\"564033717568-bu2nr1l9h31bhk9bff4pqbenvvoju3oq.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          /> */}\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              {/* <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button> */}\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    console.log('test :: ', data);\n\n    dispatch({ type: AUTH, data });\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, {useEffect, useState} from 'react';\nimport './Home.css';\nimport Header from \"../../components/Header\";\nimport CalendarView from \"../../components/CalendarView\";\nimport TreeView from \"../../components/TreeView\";\nimport NoCategorySelected from \"../../components/NoCategorySelected\";\nimport categoryService from \"../../services/category\";\nimport {swalError} from \"../../utils/swal\";\nimport Task from \"../../components/Task\";\nimport taskService from \"../../services/task\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\n\nfunction Home() {\n    const [data, setData] = useState([]);\n    const [tasks, setTasks] = useState([]);\n    //const [totalDuration, setTotalDuration] = useState('');\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [showTaskModal, setShowTaskModal] = useState(false); \n\n    const [selectedTask, setSelectedTask] = useState(null);\n\n    useEffect(() => {\n        reloadCategories();\n    }, []);\n\n    useEffect(() => {\n        if(!selectedCategory) return;\n        reloadTasks();\n    }, [selectedCategory]);\n\n    const reloadCategories = async () => {\n        await categoryService.getAll(``)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n                setData(result.data);\n            });\n    }\n\n    const handleCreateTask = e => {\n        e.preventDefault();\n        setShowTaskModal(true);\n    }\n\n    \n    const reloadTasks = async () => {\n        await taskService.getAll(selectedCategory._id)\n            .then(result => {\n                if (result.error) {\n                    swalError(result.error);\n                    return;\n                }\n\n                //setTotalDuration(result.data.duration);\n\n                var x = result.data.duration * 1000;\n                var d = moment.duration(x, 'milliseconds');\n                var hours = Math.floor(d.asHours());\n                var mins = Math.floor(d.asMinutes()) - hours * 60;\n                //console.log(hours + \" hours:\" + mins + \" mins:\");\n                const theDuration = hours + \" h \" + mins + \" mn\";\n\n                //setTotalDuration(theDuration)\n                \n                let f = Array.from(result.data.tasks);\n                let groups = _.groupBy(result.data.tasks, obj => moment(obj.start).startOf('day').format());\n                for (const [key, value] of Object.entries(groups)) {\n                    f.push({\n                        _id: value._id,\n                        categoryId: value.categoryId,\n                        title: `Total ${getHoursMinutesFormat(value.reduce((a, b) => a + b.duration, 0))}`,\n                        start: moment(key).toDate(),\n                        end: moment(key).toDate()\n                    });\n                }\n                \n                f = f.map(x => {\n                    return {\n                        ...x,\n                        start: moment(x.start).toDate(),\n                        end: moment(x.end).toDate()\n                    };\n                });\n\n                setTasks(f);\n            });\n    }\n\n    const viewTaskDetails = task => {\n        setSelectedTask(task);\n        setShowTaskModal(true);\n    }\n\n    const getHoursMinutesFormat = minutes => moment.utc(moment.duration(minutes*60, \"seconds\").asMilliseconds()).format(\"HH:mm\");\n\n    return (\n        <div>\n            <Header />\n            {\n                showTaskModal &&\n                <Task\n                    task={selectedTask}\n                    onClose={() => {setSelectedTask(null); setShowTaskModal(false);}}\n                    reloadTasks={reloadTasks} />\n            }\n             \n            <div className=\"container-fluid\">\n                <div className=\"row mt-10\" style={{height: '90vh'}}>\n                    <div className=\"col-3\">\n                        <TreeView data={data} setSelectedCategory={setSelectedCategory} />\n                    </div>\n                    <div className=\"col-9\">\n                        {selectedCategory &&\n                        <div className=\"row mb-10\">\n                            <div className=\"col\">\n                                <strong>Selected category: </strong>{selectedCategory.label}\n                                &nbsp;&nbsp;\n                                {/* <strong>Total duration:</strong> {totalDuration} */}\n                                 {/* {getHoursMinutesFormat(totalDuration)} */}\n                            </div>\n                            <div className=\"col text-right\">\n                                <a href=\"#\" onClick={e => handleCreateTask(e)} className=\"btn-purple\">\n                                    <i\n                                        className=\"fa fa-plus-circle\"\n                                        style={{fontSize: '20px', marginRight: '8px'}}\n                                    ></i>\n                                    Create new Task\n                                </a>\n                                \n                            </div>\n                        </div>}\n                        {selectedCategory && <CalendarView selectedCategory={selectedCategory} tasks={tasks} viewTaskDetails={viewTaskDetails} /> || <NoCategorySelected />}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Route, Switch, BrowserRouter, Redirect, useHistory} from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport CalendarView from \"./components/CalendarView\";\nimport TreeView from \"./components/TreeView\";\nimport NoCategorySelected from \"./components/NoCategorySelected\";\nimport categoryService from \"./services/category\";\nimport {swalError} from \"./utils/swal\";\nimport Task from \"./components/Task\";\nimport taskService from \"./services/task\";\nimport moment from \"moment\";\nimport Auth from \"./components/Auth/Auth\"\nimport _ from \"lodash\";\nimport { Container } from '@material-ui/core';\nimport $ from \"jquery\";\nimport Home from './components/Home/Home';\n//const history = useHistory();\n\nfunction App() {\n    const user = JSON.parse(localStorage.getItem('profile'));\n    \n\n    const requireAuth = (nextState, replace) =>   {\n        if(!this.authenticated()) // pseudocode - SYNCHRONOUS function (cannot be async without extra callback parameter to this function)\n        replace('/login');\n    }\n    \n    useEffect(() => {\n       /*  const token = localStorage.getItem('profile');\n        if(!token) {\n            history.push('/login');\n        } */\n       \n    }, []);   \n\n   \n\n    return (\n\n        <BrowserRouter >\n        <Container maxWidth=\"xl\">\n\n        <Switch>\n            <Route path=\"/\" exact render={() => \n                {\n                    if(localStorage.getItem('profile')){\n                        console.log('yes');\n                        return  (<Home/>)\n                    }else {\n                        console.log('no');\n                        return (<Redirect to=\"/login\" />)\n                    }\n                    \n                }} />\n            <Route path=\"/tasks\" exact component={Home} />\n            <Route path=\"/tasks/search\" exact component={Home} />\n            <Route path=\"/login\" exact component={Auth} />        \n         \n        </Switch>\n      \n        {/* <Switch>\n            <Route path=\"/\" exact component={Home} onEnter={requireAuth} />\n            <Route path=\"/tasks\" exact component={Home} onEnter={requireAuth}/>\n            <Route path=\"/tasks/search\" exact component={Home} />\n            <Route path=\"/login\" exact component={Auth} />     \n            <Route path=\"/login\" exact component={Auth} />   \n         \n        </Switch> */}\n      </Container>    \n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, {}, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n/* import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n */"],"sourceRoot":""}